" {{{ Plugins and Settings

" Using vim-plug for plugin manager
" https://github.com/junegunn/vim-plug

call plug#begin(expand('$HOME/.vim/bundle'))

Plug 'junegunn/vim-plug'

" }}}

" <PLUGINS>

" {{{ Auto Close
"     ========

Plug 'townk/vim-autoclose'

" }}}


" {{{ Auto Pair
"     ========

Plug 'jiangmiao/auto-pairs'

" }}}

" {{{ ack.vim
"     =======

Plug 'mileszs/ack.vim'

" }}}

" {{{ vim-tmux
"     ========

Plug 'tmux-plugins/vim-tmux'

" }}}

" {{{ JS development
"     ==============

" Plug 'mustache/vim-mustache-handlebars'
" Plug 'kchmck/vim-coffee-script'
" Plug 'mtscout6/vim-cjsx'
" Plug 'digitaltoad/vim-jade'
" 
" }}}

" {{{ vim-instant-markdown
"     ====================

Plug 'suan/vim-instant-markdown'

" }}}

" {{{ editorconfig-vim
"     ================

Plug 'editorconfig/editorconfig-vim'

" }}}

" {{{ vim-localvimrc: Project-specific vimrc's
"     ========================================
"
" The 'exrc' option almost achieves this, but it only checks the *current*
" directory; if you have a local .vimrc in your project root but open vim
" in a subfolder, 'exrc' will miss it.
"
" The local .vimrc will be the very last file loaded (as indicated by
" :scriptnames), so instead of setting things like filetypes using
" autocommands (which are prohibited in the sandbox anyway), you just write
" some vim script in the .lvimrc that is executed every time a buffer is
" entered in that folder hierarchy.

" Plug 'embear/vim-localvimrc'

" }}}

" {{{ His Home-Row-ness the Pope of Tim
"     =================================

" vim-surround: s is a text-object for delimiters; ss linewise
" ys to add surround
Plug 'tpope/vim-surround'

" vim-commentary: gc is an operator to toggle comments; gcc linewise
Plug 'tpope/vim-commentary'

" vim-repeat: make vim-commentary and vim-surround work with .
Plug 'tpope/vim-repeat'

" vim-liquid: syntax stuff
Plug 'tpope/vim-liquid'

" vim-markdown: some stuff for fenced language highlighting
Plug 'tpope/vim-markdown', {'on_ft': 'markdown'}

Plug 'tpope/vim-fugitive') " best Git wrappe
Plug 'tpope/vim-git')     
" call dein#add('tpope/vim-rails')    " best Git wrapper
Plug 'tpope/vim-vinegar')    " vinegar.vim enhances netr
Plug 'tpope/vim-haml')       " Haml, Sass, and SCSS that ship with Vi
Plug 'tpope/vim-eunuch')     " Vim sugar for the UNIX shell command
Plug 'tpope/vim-unimpaired') " complementary pairs of mapping

" }}}

" {{{ Autocomplete
"     ===========
Plug 'scrooloose/snipmate-snippets') "Large number of snippete
"C/C++ complete
Plug 'Valloric/YouCompleteMe')
Plug 'SirVer/ultisnips')   "snippets engin
Plug 'honza/vim-snippets') "snippets files for various programming language
Plug 'ervandew/supertab') "tab completition
Plug 'craigemery/vim-autotag') "update tags on exi
Plug 'othree/html5.vim')   "HTML5 + inline SVG omnicomplete functio
Plug 'valloric/MatchTagAlways', {'on_ft': 'html'})   "always highlights the XML/HTML tags that enclose your cursor
Plug 'mattn/emmet-vim')    "provides support for expanding abbreviations similar to emme
Plug 'davidhalter/jedi-vim', {'on_ft': 'python'}

" }}}

" {{{ NERDTree
"     ========

Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'

" }}}

" {{{ Additional functionality
"     ========================

Plug 'dhruvasagar/vim-table-mode')   "make tables in vi
Plug 'rhysd/vim-grammarous')         "vim grammer checke
Plug 'junegunn/gv.vim')              "git commit browse
Plug 'sbdchd/neoformat')             "formatting cod
Plug 'mhinz/vim-sayonara', { 'on': 'Sayonara' }) " buffer cloase san
Plug 'terryma/vim-multiple-cursors'
Plug 'chrisbra/Colorizer' )          " Show hex codes as colour

" }}}

" {{{ Folding plugins
"     ===============

Plug 'tmhedberg/SimpylFold', {'on_ft': 'python'}
Plug 'nelstrom/vim-markdown-folding', {'on_ft': 'markdown'}


" }}}


" }}}
" </PLUGINS>

call plug#end()

filetype plugin indent on

" }}}

" }}}


